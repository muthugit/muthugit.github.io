{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#_1","title":"Home","text":""},{"location":"#im-muthu-and-welcome-to-my-digital-space","title":"I'm Muthu and welcome to my digital space","text":"<p>A digital space in an online space with blogs, notebooks, experiences and projects</p> <p>Here are some of my favorite sections of this blog</p> <ul> <li>Blog</li> <li>Python examples</li> <li>Thoughts</li> </ul> <p>Follow me on Linkedin</p>"},{"location":"projects/","title":"Projects","text":""},{"location":"projects/#azure-function-orchestration-based-etl","title":"Azure function orchestration based ETL","text":"<p>Feb 2023</p> <p>Worked on Azure function (function, durable function, activity function) to orchestrate the activities to perform the ETL process.</p> <p>Triggers worked on 1. HTTP Trigger 2. Blob Event Trigger</p>"},{"location":"projects/#proof-of-concept-celery-redis-airflow","title":"[Proof of Concept] Celery - Redis - Airflow","text":"<p>Oct 2022</p> <p>The objective of this PoC is to trigger a Airflow pipeline when new message send to Redis queue</p> <p>Ref: https://github.com/muthugit/event-driven-celery-redis-airflow</p>"},{"location":"projects/#open-source-airtable-orm","title":"[Open Source] Airtable ORM","text":"<p>Oct 2022</p> <p>Created the python package called <code>airtable-orm</code> to act as the Object Relational Model for the Airtable. It helps the developers to query data from Airtable to python objects.</p> <p>Ref: https://pypi.org/project/airtable-orm/</p>"},{"location":"projects/#dagster-workflow-engine","title":"Dagster workflow engine","text":"<p>Apr 2020</p> <p>Creating independent Dagster solids for the client's specific operations. Also, creating pipelines with the Dagster solids to complete the workflow.</p>"},{"location":"projects/#custom-workflow-engine","title":"Custom workflow engine","text":"<p>Jul 2019 \u2013 Mar 2020</p> <p>Created custom workflow engine to handle the data and process pipelines in Python. With the experience from CDAP, created OOPs based workflow engine to manage the pipelines to move the data from source to the web based, 3D visualization screen.</p>"},{"location":"projects/#cdap-workflow-engine","title":"CDAP workflow engine","text":"<p>Aug 2018 \u2013 Jun 2019</p> <p>Technologies used - CASK's CDAP, Python, JAVA, Paraview &amp; PVPython, Microsoft Azure Blobfuse &amp; File storage</p> <ul> <li>Understanding the process of the Mining industry</li> <li>Worked with the data from the IoT device and managed to store in the server in secure manner</li> <li>Creating custom plugins in CDAP to create the automation pipeline process in CDAP</li> <li>Workin with the Geo-scientists and automated their process using CDAP</li> </ul>"},{"location":"projects/#devops-for-a-satellite-imaging-startup","title":"DEVOPS for a Satellite imaging startup","text":"<p>Jul 2018 \u2013 Aug 2018</p> <p>Technologies Used \u2013 Google Cloud Shell, Bitbucket, Superset, Google Cloud Storage, Open VPN, VPC, Google Single Sign On (SSO)</p> <ul> <li>Setup secure computing infrastructure on Google Cloud Platforms under the Virtual Private Cloud (VPC) and Virtual Private Network (VPN)</li> <li>Setup the Atlassian Bitbucket server on Google Cloud Platform</li> <li>Setup Superset server on Google Cloud Platform</li> <li>Implemented Google Single Sign On (SSO) for the applications</li> <li>Implemented automated backup system on Google Cloud Storage</li> <li>Created programmatic restore from Google Cloud Storage</li> </ul>"},{"location":"projects/#cloud-based-asset-tracker-for-an-autonomous-vehicle-data-management-company","title":"Cloud based Asset tracker for an Autonomous vehicle data management company","text":"<p>May 2018 \u2013 Jun 2018</p> <p>Technologies Used \u2013 Python, AWS API Gateway, AWS Lambda functions, AWS RDS (MySQL), AWS Cognito User Pool, Ionic, Angular6</p> <ul> <li>Understood the client\u2019s requirement and designed the Database and the micro services architecture for the application</li> <li>Prepared technical design document</li> <li>Created micro services based APIs to manage both mobile applications and web applications.</li> <li>Managed security over the data transfer using AWS Cognito users management.</li> <li>Created Selenium based automation testing tool to verify the APIs.</li> <li>Supported the front-end applications (Ionic &amp; Angular6).</li> <li>Created automation deployment script to deploy all the services to AWS from the client using AWS CLI SDK.</li> </ul>"},{"location":"projects/#object-sorter-robotic-arm","title":"Object Sorter \u2013 Robotic Arm","text":"<p>Apr 2018</p> <p>Technologies Used \u2013 Python, OpenCV (Blob Detection), CGI</p> <ul> <li>Designed the architecture for the system</li> <li>Implemented the OpenCV - blob detection algorithm to identify the shape of the object.</li> <li>Differentiated objects using different approaches and passed the coordination to robotic arm in Python.</li> <li>Implemented IP camera solution to the system to stream the images.</li> <li>Created front-end web application to visualize the object\u2019s coordination.</li> <li>Packaged the solution in Raspberry Pi.</li> </ul>"},{"location":"projects/#cloud-based-advertisement-placement-tracking-system-for-a-social-media-advertisement-consolidator","title":"Cloud based advertisement placement tracking system for a social media advertisement consolidator","text":"<p>Jan 2018 \u2013 Feb 2018</p> <p>Technologies Used \u2013 AWS Lambda functions, AWS Kinsis streaming, AWS Queuing system (SQS), DynamoDB, Cloud watch, D3.js</p> <ul> <li>Created the cost effective system architecture for the system based on the client\u2019s requirement</li> <li>Created the front-end to the different levels of users to show the graphs and other dashboards using a JavaScript library D3.js</li> <li>Collected the data from the various sources (TV Apps) as the stream and stored them into a NoSQL database</li> </ul>"},{"location":"projects/#sales-forecasting-for-the-manufacturer-of-air-conditioner","title":"Sales forecasting for the manufacturer of Air conditioner","text":"<p>Jan 2018 \u2013 Feb 2018</p> <p>Technologies Used \u2013 Python, J2EE, Qlik Sense cloud</p> <ul> <li>Created the centralized database by pulling the external factor data from various sources.</li> <li>Created the data model for the data visualization in Qlik Sense.</li> <li>Identified the sales pattern by overlaying the various external factors on the sales data (especially the weather data).</li> <li>Helped to create the statistical model to predict the sales for the next quarter.</li> </ul>"},{"location":"projects/#log-analysis-and-reporting-framework-for-a-bay-area-startup","title":"Log analysis and reporting framework for a Bay area startup","text":"<p>Dec 2017 \u2013 Jan 2018</p> <p>Project descriptionTechnologies Used \u2013 Grafana, InfluxDB, django, AngularJS, MySQL</p> <ul> <li>Created the SaaS based front-end application to monitor the various systems</li> <li>Connected the log data to the InfluxDB</li> <li>Created the Grafana dashboard for the individual users dynamically and connected to the InfluxDB</li> <li>Integrated the Grafana dashboard into the custom web application</li> </ul>"},{"location":"projects/#product-identification-iphone-application","title":"Product identification - iPhone application","text":"<p>Nov 2017</p> <p>Project descriptionTechnologies Used \u2013 Python, Ionic, Bootstrap CSS</p> <ul> <li>Managed the machine learning team to build the real-time product identification model</li> <li>Implemented the model from the front-end mobile application by using the custom camera options to capture the real-time frame</li> <li>Used the Amazon Advertising API to get the product information includes ratings &amp; reviews count and showcase them in the mobile application after identifying the product</li> </ul>"},{"location":"projects/#testing-automation-for-voice-assistant-platforms","title":"Testing automation for Voice assistant platforms","text":"<p>Nov 2017</p> <p>Project descriptionTechnologies Used \u2013 Selenium, Google Assistants, Amazon Alexa, Python.</p> <ul> <li>Created automation system to test the voice assistants (Google Assistant, Alexa).</li> <li>Ask the question to a Chatbot agent from an another chatbot and collect the response from it.</li> <li>Validated the responses from voice assistants and prepare the testing reports based on the results.</li> </ul>"},{"location":"projects/#chatbot-engine-on-aws","title":"Chatbot engine on AWS","text":"<p>Built a custom chatbot engine on the client's AWS account.</p> <ul> <li>Architect the chatbot engine with AWS Lex, Lambda functions &amp; DynamoDB</li> <li>Managed a team of 4</li> <li>Simplified the User Experience to have the Chatbot engine in easy 3 steps</li> </ul> <p>Reference website</p>"},{"location":"projects/#survey-chatbot-for-a-clinical-trial-organization","title":"Survey Chatbot for a Clinical trial organization","text":"<p>Oct 2017</p> <p>Project descriptionTechnologies Used \u2013 Python, AWS Lambda functions, AWS API Gateway, Amazon Alexa Skills, AngularJS, Bootstrap CSS, Ionic</p> <ul> <li>Created the Medical survey chatbot system to collect the user responses for the predefined questions</li> <li>Showcased the collected response in a web application</li> <li>Implemented the same system for the mobile application using custom chatbot agents</li> </ul>"},{"location":"projects/#custom-google-actions-for-a-leading-retail-organization","title":"Custom Google Actions for a leading retail organization","text":"<p>Aug 2017 \u2013 Sep 2017</p> <p>Project descriptionTechnologies Used \u2013 NodeJS, Google Dialogflow, Google Firebase Functions</p> <ul> <li>Created the proof of concept system with custom Google Actions to collect the orders through the chatbot</li> <li>Implemented personalization on the chat-bot back-end system to suggest the products based on the customers\u2019 history of orders</li> <li>Connected the Magento (E-Commerce platform) system to get the orders from the Google Actions</li> </ul>"},{"location":"projects/#custom-amazon-alexa-skill-retail-chat-bot-for-a-clothing-retailer","title":"Custom Amazon Alexa skill \u2013 Retail chat bot for a clothing retailer","text":"<p>Jun 2017 \u2013 Jul 2017</p> <p>Project descriptionTechnologies Used \u2013 J2EE, AWS Lambda functions, AWS API Gateway, AWS Lex, AWS RDS (MySQL), AWS DynamoDB</p> <ul> <li>Built the Alexa custom skill for AEO for different kinds of intents</li> <li>Integrated the content management system to deliver the response through Alexa for the user\u2019s questions</li> <li>Programmatically trained the Question &amp; Answer to the AWS Lex NLP system</li> <li>Implemented OAUTH security system in Alexa custom skill</li> </ul>"},{"location":"projects/#data-analytics-and-visualization-solution-for-a-non-profit-organization-working-towards-preserving-global-ice-melts","title":"Data analytics and visualization solution for a non-profit organization working towards preserving global ice melts","text":"<p>May 2017 \u2013 Jul 2017</p> <p>Project descriptionTechnologies Used \u2013 JAVA, AWS Lambda functions, AWS Cloud watch events, Grafana, InfluxDB</p> <ul> <li>Created the programmatic e-mail reader to collect the temperature of the various sensors details.</li> <li>Loaded the collected data into the time-series database (InfluxDB)</li> <li>Created a visualization system using Grafana with the InfluxDB connection</li> </ul>"},{"location":"projects/#sodabot-alexa-soda-vending-machine","title":"Sodabot - Alexa Soda vending machine","text":"<p>Jun 2017</p> <p>Project descriptionSodabot is a Conversational based chatbot engine to pour the Soda using Custom Alexa Skill. Technology Stack - AWS Lambda function (Serverless) - Raspberry PI (IoT) - PHP - Python</p> <p>Youtube Video</p>"},{"location":"projects/#aptengine-the-product-recommendation-engine-extension-for-magento","title":"AptEngine \u2013 The product recommendation engine extension for Magento","text":"<p>Sep 2016 \u2013 Dec 2016</p> <p>Project descriptionTechnologies Used \u2013 PHP, Magento, MySQL, Jquery</p> <ul> <li>Designed and implemented the Market Basket Analysis on Magento system</li> <li>Created the DB design for the application</li> <li>Collected the user\u2019s data from the front-end and stored into the database</li> <li>Created the cron job to flatten the data for the recommendation</li> <li>Implemented the recommendation model in Magento as the extension</li> </ul>"},{"location":"projects/#totes","title":"Totes","text":"<p>Jan 2015 \u2013 Dec 2015</p> <p>Project descriptionManaged Data Loading process for 4 different sites of Totes Business. Created Generic Loading Process model to load file in any format (Excel, CSV or Flat text file)</p> <p>www.totes.com</p>"},{"location":"projects/#catalog-loader-electrolux-b2b-b2c-ecommerce","title":"Catalog loader - Electrolux - B2B &amp; B2C Ecommerce","text":"<p>Aug 2015</p> <p>Loaded Product, Price (B2B &amp; B2C), Inventory information from PIM &amp; JDE ERP systems via BCC Platform: J2EE Framework: ATG Version: 11.2</p>"},{"location":"projects/#artprint","title":"ArtPrint","text":"<p>Dec 2014</p> <p>Artprint is the Product Customization Magento extension.</p> <p>Responsibilities - Done the market research about the product customization websites - Understand the client requirements - Create the product customization website with necessary tools like edit, import image. - Checkout process</p> <p>www.dilsebol.com/</p>"},{"location":"tags/","title":"Tags","text":"<p>{{ tag_content }}</p>"},{"location":"Building%20HPC/","title":"High Performance Culture","text":""},{"location":"blog/","title":"Index","text":"<p>{{ blog_content }}</p>"},{"location":"blog/#blogs","title":"Blogs","text":""},{"location":"blog/#four-major-mistakes-i-made-in-data-analysis","title":"Four Major mistakes I made in Data analysis","text":"<p><code>dev</code> <code>analytics</code></p>"},{"location":"blog/#why-to-do-sales-analysis","title":"Why to do Sales analysis?","text":"<p><code>business</code> <code>analytics</code></p>"},{"location":"blog/pair-program/","title":"My pair programming experience","text":"<p>I would like to share my Pair programming exercise with you!</p> <p>I believe that building a product along with a team is more powerful than building it alone. I had some chances to participate in pair programming in my experience.</p> <ol> <li> <p>[I was the driver] While I started learning ATG (Oracle commerce), there was one workstation provided and two people were allocated. We learned ATG as fast as possible in one month which was the most efficient and productive learning experience I had.</p> </li> <li> <p>[I was the navigator] The second experience with my Technical Lead who was very strong in the ATG platform. When he was building the application, I was just looking into his process. My role was to understand the system as well as identify the issues on the go.</p> </li> <li> <p>[I was the navigator] The Soda bot experience. Actually we can not say that is the pair programming but we work as a team and we were able to showcase the demonstration within 16hours (from ideation to demonstration).</p> </li> <li> <p>[I was the driver] In Datacloud, there was a production issue while we were upgrading the Clickhouse version. My technical lead and myself solved the major issue in 2hours remotely.</p> </li> <li> <p>[I was the driver] Another incident in Datacloud, we tried to change the architecture of the application. My technical lead and myself tried to set up the new application instance with different architecture. That was a good experience for me to understand the full product flow.</p> </li> <li> <p>[I was the driver] Before entering into my technical field, I\u2019ve designed six magazines using this approach. Even Though designing was my passion, I design along with the customer (Medical college students). They (more than 10 persons) act as the navigators (sitting behind me and watching what I am doing) to provide the contents and give suggestions on the design and layout which I designed. I still remember, during my MBA time, I designed a complete magazine (~200 pages) in 36 continuous hours without sleep. (That was the first success I faced in my life, that, more than 1000 audience for the book which I\u2019ve designed)</p> </li> <li> <p>[I was the driver] Ara and myself designed a lot of marketing materials (countless) in a fast manner using this approach.</p> </li> <li> <p>[I was the driver] That was a good experience while Ara and myself designed ERD for Akridata. We designed the whole ERD in one/two hour, I guess. That was my first experience in designing ERD for a whole application in a short time.</p> </li> </ol> <p>Even though, these are very minor incidents, these all are very important in my life.</p> <p>If you\u2019ve any experience like this, please share.</p>","tags":["devlife"]},{"location":"blog/dev/firebase_auto_deployment/","title":"Steps to auto Firebase deployment using GITHUB Actions (CI/CD)","text":"","tags":["devops","ci/cd"]},{"location":"blog/dev/firebase_auto_deployment/#create-a-github-repository","title":"Create a GITHUB repository","text":"","tags":["devops","ci/cd"]},{"location":"blog/dev/firebase_auto_deployment/#create-a-firebase-project-on-the-firebase-console","title":"Create a Firebase Project on the Firebase console","text":"","tags":["devops","ci/cd"]},{"location":"blog/dev/firebase_auto_deployment/#initialize-firebase","title":"Initialize firebase","text":"<p><pre><code>$ firebase init\n</code></pre> And choose your project and select Hosting from the CLI tool</p>","tags":["devops","ci/cd"]},{"location":"blog/dev/firebase_auto_deployment/#create-packagejson-using","title":"Create package.json using","text":"<pre><code>$ npm init\n</code></pre> <p>Once the package.json created add the following component on the JSON under scripts \"build:production\": \"node --version\", \"build:prod\": \"node --version\", The final package.json will look like this</p> <pre><code>package.json\n{\n\"name\": \"cicd\",\n\"version\": \"1.0.0\",\n\"description\": \"\",\n\"main\": \"index.js\",\n\"scripts\": {\n\"build:production\": \"node --version\",\n\"build:prod\": \"node --version\",\n\"test\": \"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"\n},\n\"repository\": {\n\"type\": \"git\",\n\"url\": \"git+https://github.com/muthugit/cicd.git\"\n},\n\"author\": \"\",\n\"license\": \"ISC\",\n\"bugs\": {\n\"url\": \"https://github.com/muthugit/cicd/issues\"\n},\n\"homepage\": \"https://github.com/muthugit/cicd#readme\"\n}\n</code></pre>","tags":["devops","ci/cd"]},{"location":"blog/dev/firebase_auto_deployment/#create-the-workflow-file-mainyml-on-the-following-directory","title":"Create the workflow file (main.yml) on the following directory","text":"<pre><code>$ &lt;root directory&gt;/.github/workflows\n</code></pre> <pre><code>main.yml\nname: FIREBASE-DEPLOY\n\non:\n  push:\n    branches:\n    - master\n    - release/*\n\n\njobs:\n  firebase-deploy:\n\n\n    runs-on: ubuntu-latest\n\n\n    steps:\n    - uses: actions/checkout@master\n    - uses: actions/setup-node@master\n      with:\n        node-version: '10.x'\n    - run: npm install\n    - run: npm run build:prod\n    - uses: w9jds/firebase-action@master\n      with:\n        args: deploy --only hosting\n      env:\n\n        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}\n</code></pre>","tags":["devops","ci/cd"]},{"location":"blog/dev/firebase_auto_deployment/#get-the-firebase-token-by-running-this","title":"Get the Firebase token by running this","text":"<pre><code>$ firebase login:ci\n</code></pre>","tags":["devops","ci/cd"]},{"location":"blog/dev/firebase_auto_deployment/#goto-githubcom-and-navigate-to-your-repository","title":"Goto GITHUB.com and navigate to your repository","text":"<p>Goto Settings -&gt; Secrets Create new secret Copy the secret generated on the previous step and name the secret as FIREBASE_TOKEN</p>","tags":["devops","ci/cd"]},{"location":"blog/dev/firebase_auto_deployment/#thats-it-just-push-your-code-this-will-deploy-the-public-folder-to-firebase-hosting","title":"Thats it! Just push your code. This will deploy the PUBLIC folder to firebase hosting","text":"","tags":["devops","ci/cd"]},{"location":"blog/dev/serverless/","title":"Why serverless is next big thing in computation?","text":"<p>The industries like E-Commerce is struggling in maintain the BIG servers. They are investing HUGE amount of money in BIG servers even if there are no sales for the month.</p> <p>Their server is running 24x7x365 of a year without any reason. Means, even if there are no traffic to the server, they are paying.</p> <p>This is the one major reason behind the Server-less Architecture. Even though, the \u201cPAY-AS-YOU-GO\u201d model, they are paying for the basic infrastructure as a FIXED amount.</p> <p>They can\u2019t downsize the server in a single hour even not in a single Day.</p> <p>What is Server-less Architecture? You can ask the question to me, that,</p>"},{"location":"blog/dev/serverless/#how-the-computations-happen-without-server","title":"How the computations happen without Server?","text":"<p>Server-less not the meaning of no computation. But there will be a physical server for the computation but that is not in our control. The Server-less service provider like (AWS/Google) they maintain the high computational servers from their side. They allow us to execute the micro-services in these physical server whenever we want.</p> <p>Mainly, the server-less applications are the collections of the Micro-services (Functions). We can build the application with these micro-services like PriceCalculator(), Login().</p>"},{"location":"blog/dev/serverless/#how-it-works","title":"How it works?","text":"<p>The main functionality of the micro-services are</p> <p>Get the input and Execute Return the output. We can build the server-less architecture in two ways During building these kinds of server-less architecture we\u2019ve to think about the PERFORMANCE &amp; COST of the execution. Based on that, we can choose any one of the following approaches</p> <p>Separate micro-services for each functionality One micro-service to control all the functionalities Who are the service providers?</p> <p>There are three major service providers available in market</p> <p>Amazon Web Services (Lambda functions) Google Firebase (Firebase functions) Microsoft (Azure functions) Out of these three Google Firebase is the FREE.</p> <p>In the later blog, I\u2019ll share more details about each services with the better comparisons.</p>"},{"location":"pyBook/","title":"Index","text":"<p>{{ blog_content pyBook}}</p>"},{"location":"pyBook/OOPs/encapsulation_realtime/","title":"Encapsulation - realtime usage","text":"<p>The OOPs the usage of encapsulation is very normal and easy. It is important to access the value of the variable through the function.</p> <p>In the following simple example, we can get the value of <code>name</code> using <code>get_name()</code> function.</p> <pre><code>class EncapsulationExample:\n  def __init__(self):\n    self.name = None\n\n  def set_name(self, name):\n    self.name = name\n\n  def get_name(self):\n    return self.name\n</code></pre> <p>The following example may explain one of the real time application of encapsulation </p> <pre><code>class EncapsulationExample:\n  def __init__(self):\n    self.name = None\n\n  def set_name(self, name):\n    name = f\"{name} Updated\"\n    self.name = name\n\n  def get_name(self, upper=False):\n    if upper:\n      self.name = self.name.upper()\n    return self.name\n</code></pre> <p>In this example, both the <code>get</code> and <code>set</code> functions updating the original <code>self.name</code> variable</p>","tags":["python","oops"]},{"location":"pyBook/OOPs/encapsulation_realtime/#using-property-decorator-to-replace-custom-get-and-set-functions","title":"Using property decorator to replace custom `get` and `set` functions","text":"<p>Usage example:</p> <pre><code>class EncapsulationExample:\n    def __init__(self, var1):\n        self._var1 = var1\n\n    @property\n    def var1(self):\n        print(\"Returning property value\")\n        return self._var1\n\n    @var1.setter\n    def var1(self, var1):\n        print(f\"Setting property value =&gt; {var1}\")\n        self._var1 = var1\n\n\nif __name__ == \"__main__\":\n    ec = EncapsulationExample(var1=\"demo\")\n    print(ec.var1)\n    ec.var1=\"second value\"\n</code></pre> <p>This will return <pre><code>Returning property value\ndemo\nSetting property value =&gt; second value\n</code></pre></p>","tags":["python","oops"]},{"location":"pyBook/Tips/how_to_write_a_class/","title":"How to write a class in python?","text":"","tags":["python","tips"]},{"location":"pyBook/Tips/how_to_write_a_class/#why-we-need-a-class-instead-of-a-function","title":"Why we need a class instead of a function?","text":"<p>The main difference between a function and a class is that, using classes we can create multiple instances but using function we can run the same function with different parameters.</p>","tags":["python","tips"]},{"location":"pyBook/Tips/how_to_write_a_class/#define-a-class","title":"Define a class","text":"<pre><code>class YourBusinessLogic:\n    def __init__(self):\n\"\"\"Initializing the class\"\"\"\n        pass\n</code></pre>","tags":["python","tips"]},{"location":"pyBook/Tips/how_to_write_a_class/#methods","title":"Methods","text":"<pre><code>def first_logic(self, param1):\n\"\"\"This is the first business logic created to &lt;purpose&gt;\n\n    :param param1: The parameter to the method\n    :type param1: &lt;the data type of the parameter&gt;\n\n    :returns: This function will return the output of the logic\n    :rtype: The return type of the function\n    \"\"\"\"\n    # Your business logic here\n    return None\n</code></pre>","tags":["python","tips"]},{"location":"pyBook/Tips/how_to_write_a_class/#static-method","title":"Static method","text":"<pre><code>@staticmethod\ndef static_method(param1):\n\"\"\"Static method used to run a specific function while creating the instance\n    We can't access any of the class instance using `self` keyword here\n\n    :param param1: The parameter to the method\n    :type param1: &lt;the data type of the parameter&gt;\n\n    :returns: This function will return the output of the logic\n    :rtype: The return type of the function\n    \"\"\"\"\n    # Your business logic here\n    return None\n</code></pre>","tags":["python","tips"]},{"location":"pyBook/Tips/read_json_file_in_python/","title":"Read JSON file in Python","text":"<pre><code># Import JSON library\nimport json\n\nclass JSONReader:\n    def __init__(self, file_path: str):\n        self.file_path = file_path\n\n    def read(self):\n        with open(self.book_path, 'r') as myfile:\n            data = myfile.read()\n        return json.loads(data)\n\nif __name__ == \"__main__\":\n    reader = JSONReader(\"/tmp/a.json\")\n    print(reader.read())\n</code></pre>","tags":["python","tips"]},{"location":"pyBook/Tips/usage_of_global_variables/","title":"Usage of <code>global</code> variable","text":"","tags":["python","tips"]},{"location":"pyBook/Tips/usage_of_global_variables/#what-is-global-keyword","title":"What is <code>global</code> keyword?","text":"<p>It is used to assign the value for the variable outside the scope</p>","tags":["python","tips"]},{"location":"pyBook/Tips/usage_of_global_variables/#example-1","title":"Example 1","text":"<p><pre><code>val = 10\n\ndef print_val():\n    print(val)\n\nprint_val()\n</code></pre> This should print <pre><code>10\n</code></pre></p>","tags":["python","tips"]},{"location":"pyBook/Tips/usage_of_global_variables/#but-if-val-to-be-changed","title":"But, if <code>val</code> to be changed","text":"<p><pre><code>val = 10\n\ndef print_val():\n    val = val + 12\n    print(val)\n\nprint_val()\n</code></pre> This will through the error <pre><code>UnboundLocalError: local variable 'val' referenced before assignment\n</code></pre></p>","tags":["python","tips"]},{"location":"pyBook/Tips/usage_of_global_variables/#to-avoid-unboundlocalerror","title":"To avoid <code>UnboundLocalError</code>","text":"<p>Here is the real usage of <code>global</code> comes. If we apply <code>global</code> before assginment it will convert the <code>val</code> into the global variable</p>","tags":["python","tips"]},{"location":"pyBook/Tips/usage_of_global_variables/#example","title":"Example","text":"<p><pre><code>val = 10\n\ndef print_val():\n    global val\n    val = val + 12\n    print(f\"The updated value =&gt; {val}\")\n\nprint_val()\n</code></pre> This should print <pre><code>The updated value =&gt; 22\n</code></pre></p>","tags":["python","tips"]},{"location":"pyBook/Tips/pandas/how_to_load_csv_without_nan/","title":"Load CSV without replacing empty value to <code>nan</code>","text":"<p>In pandas the usual <code>pd.read_csv</code> load the CSV and replacing empty values to <code>nan</code>. If that needs to be override, pandas has the boolean option <code>keep_default_na</code>. If it is <code>False</code> then the pandas won't apply <code>nan</code> on the data</p> <p>Example</p> <pre><code>import pandas as pd\npd.read_csv(\"/tmp/data.csv\", keep_default_na=False)\n</code></pre> <p>For more ref: https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_csv.html</p>","tags":["python","pandas","tips"]},{"location":"thoughts/","title":"Index","text":"<p>{{ blog_content thoughts}}</p>"},{"location":"thoughts/001/","title":"001 Testing shows the presence, not the absence","text":"<p>Dijkstra once said, \u201cTesting shows the presence, not the absence, of bugs.\u201d In other words, a program can be proven incorrect by a test, but it cannot be proven correct. All that tests can do, after sufficient testing effort, is allow us to deem a program to be correct enough for our purposes.</p> <p>Info</p> <ul> <li>Source: [Book] Clean Architecture</li> <li>Author: Robert C. Martin</li> </ul>","tags":["thoughts"]},{"location":"thoughts/002/","title":"002 Respect &gt;&gt; Empathy &gt;&gt; Sympathy","text":"<pre><code>Sympathy    : I feel sorry for you\nEmpathy     : I can understand what you must be going through\nRespect     : I admire the way you are handling this\n</code></pre> <p>Info</p> <p>Respect &gt;&gt; Empathy &gt;&gt; Sympathy</p> <p>Ref</p>","tags":["thoughts"]},{"location":"thoughts/003/","title":"003 How to charge more money?","text":"<p>Start building good relationship &amp; reputations</p>","tags":["thoughts"]},{"location":"thoughts/003/#there-are-five-kinds-of-customers","title":"There are five kinds of customers","text":"<ol> <li>Price focused</li> <li>Convenience focused</li> <li>Quality persons</li> <li>Expecting good relationship</li> <li>Reputation</li> </ol> <p>Info</p> <p>People ready to pay more, if you are in good Relationship &amp; Reputation</p> <p>Ref</p>","tags":["thoughts"]},{"location":"thoughts/004/","title":"004 Amazing opportunity","text":"<p>If somebody offers you an amazing opportunity but you are not sure you can do it, say <code>yes</code>, then learn how to do it later.</p>","tags":["thoughts"]},{"location":"thoughts/005/","title":"005 Strategic programming","text":"<p>Strategic programming can also work in the context of existing software development processes. Specifically, the support for classes, inheritance, private methods, instance variable, etc in object-oriented programming, if used carefully, can provide better software designs. However, they should not be used excessively.</p> <p>Ref</p>","tags":["thoughts"]},{"location":"thoughts/006/","title":"006 Predict the FUTURE","text":"<p>The BEST way to PREDICT the future is to <code>CREATE IT</code></p>","tags":["thoughts"]}]}